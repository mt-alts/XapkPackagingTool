<!--  Copyright (c) 2024 Metin Altıkardeş. Licensed under the MIT License. See the LICENSE.  -->
    
<UserControl
    x:Class="XapkPackagingTool.View.Pages.Main.PackagePermissionsUI"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="clr-namespace:XapkPackagingTool.CustomControl"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:XapkPackagingTool.View.Pages.Main"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <SolidColorBrush x:Key="PrimaryBrush" Color="#005fb8" />
    </UserControl.Resources>
    <Border
        Margin="4"
        Background="#E5EBF0"
        BorderBrush="{DynamicResource DefaultBorderBrush}"
        BorderThickness="0.2"
        CornerRadius="6">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="5,10,5,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <WrapPanel Grid.Column="0" Orientation="Horizontal">
                    <Button
                        Margin="5,0,0,0"
                        hc:IconElement.Geometry="{DynamicResource AddGeo}"
                        hc:IconElement.Height="10"
                        hc:IconElement.Width="10"
                        Background="{DynamicResource DefaultControlBackground}"
                        Command="{Binding AddCommand}"
                        Content="{StaticResource LabelAdd}" />
                    <Button
                        Margin="5,0,0,0"
                        hc:IconElement.Geometry="{DynamicResource MultipleAddGeo}"
                        hc:IconElement.Height="10"
                        hc:IconElement.Width="10"
                        Background="{DynamicResource DefaultControlBackground}"
                        Command="{Binding MultiAddCommand}"
                        Content="{StaticResource LabelMultiAdd}" />
                    <Button
                        Margin="5,0,0,0"
                        hc:IconElement.Geometry="{DynamicResource ImportGeo}"
                        hc:IconElement.Height="10"
                        hc:IconElement.Width="10"
                        Background="{DynamicResource DefaultControlBackground}"
                        Command="{Binding ImportFromPackageCommand}"
                        Content="{StaticResource LabelImport}" />

                </WrapPanel>
                <WrapPanel
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <Button
                        Margin="0,0,5,0"
                        hc:IconElement.Geometry="{DynamicResource EditGeometry}"
                        hc:IconElement.Height="10"
                        hc:IconElement.Width="10"
                        Background="{DynamicResource DefaultControlBackground}"
                        Command="{Binding EditCommand}"
                        Content="{StaticResource LabelEdit}"
                        IsEnabled="{Binding IsOneItemSelected, ElementName=dg}" />
                    <Button
                        Margin="0,0,5,0"
                        hc:IconElement.Geometry="{DynamicResource TrashGeometry}"
                        hc:IconElement.Height="10"
                        hc:IconElement.Width="10"
                        Background="{DynamicResource DefaultControlBackground}"
                        Command="{Binding DeleteCommand}"
                        Content="{StaticResource LabelDelete}">
                        <Button.Style>
                            <Style BasedOn="{StaticResource ButtonDefault}" TargetType="Button">
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding SelectedItems.Count}" Value="0" />
                                            <Condition Binding="{Binding SelectedIndex}" Value="-1" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </WrapPanel>
            </Grid>
            <Grid Grid.Row="1">
                <cc:CustomDataGrid
                    x:Name="dg"
                    AutoGenerateColumns="False"
                    Background="{DynamicResource ContentBackground}"
                    IsReadOnly="False"
                    IsRowEditing="{Binding SelectedItemIsEditing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsUniqueEnabled="True"
                    ItemsSource="{Binding Items, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    SelectedItemsList="{Binding SelectedItems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectionMode="Extended"
                    SelectionUnit="FullRow"
                    Style="{StaticResource DataGridBaseStyle}">
                    <DataGrid.InputBindings>
                        <MouseBinding Command="{Binding UpdateCommand}" Gesture="LeftDoubleClick" />
                        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}" />
                    </DataGrid.InputBindings>
                    <DataGrid.Resources>
                        <ContextMenu x:Key="ContextMenu">
                            <MenuItem Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.UpdateCommand}" Header="{DynamicResource LabelEdit}">
                                <MenuItem.Icon>
                                    <Viewbox Width="16" Height="16">
                                        <Path Data="{StaticResource EditGeometry}" Fill="Black" />
                                    </Viewbox>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.DeleteCommand}" Header="{DynamicResource LabelDelete}">
                                <MenuItem.Icon>
                                    <Viewbox Width="16" Height="16">
                                        <Path Data="{StaticResource TrashGeometry}" Fill="Black" />
                                    </Viewbox>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.Resources>
                    <DataGrid.RowStyle>
                        <Style BasedOn="{StaticResource DataGridRowStyle}" TargetType="DataGridRow">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="ContextMenu" Value="{StaticResource ContextMenu}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Content, Mode=TwoWay, NotifyOnSourceUpdated=true, UpdateSourceTrigger=PropertyChanged}"
                            Header="{StaticResource LabelPermission}" />
                    </DataGrid.Columns>
                </cc:CustomDataGrid>
                <TextBlock
                    x:Name="emptyText"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="20"
                    FontWeight="Bold"
                    Text="{DynamicResource LabelNoItemsToDisplayMessage}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=dg, Path=HasItems}" Value="False">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Grid>
    </Border>
</UserControl>
